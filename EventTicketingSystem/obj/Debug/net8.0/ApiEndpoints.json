[
  {
    "ContainingType": "EventTicketingSystem.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "EventTicketingSystem.DTOs.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerDto",
        "Type": "EventTicketingSystem.DTOs.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DiscountController",
    "Method": "CreateDiscount",
    "RelativePath": "api/discounts",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "discountDto",
        "Type": "EventTicketingSystem.DTOs.DiscountDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventTicketingSystem.Models.Discount",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "DiscountController",
    "Method": "GetDiscount",
    "RelativePath": "api/discounts/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventTicketingSystem.Models.Discount",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "DiscountController",
    "Method": "UpdateDiscount",
    "RelativePath": "api/discounts/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "discountDto",
        "Type": "EventTicketingSystem.DTOs.DiscountDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DiscountController",
    "Method": "DeleteDiscount",
    "RelativePath": "api/discounts/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "DiscountController",
    "Method": "GetDiscountsForEvent",
    "RelativePath": "api/discounts/event/{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EventTicketingSystem.Models.Discount, EventTicketingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.EventController",
    "Method": "CreateEvent",
    "RelativePath": "api/events",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventDto",
        "Type": "EventTicketingSystem.DTOs.EventDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventTicketingSystem.Models.Event",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.EventController",
    "Method": "GetAllEvents",
    "RelativePath": "api/events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EventTicketingSystem.DTOs.EventDto, EventTicketingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.EventController",
    "Method": "GetEvent",
    "RelativePath": "api/events/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventTicketingSystem.Models.Event",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.EventController",
    "Method": "UpdateEvent",
    "RelativePath": "api/events/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "eventDto",
        "Type": "EventTicketingSystem.DTOs.EventDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.EventController",
    "Method": "DeleteEvent",
    "RelativePath": "api/events/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.EventController",
    "Method": "GetEventsByUserId",
    "RelativePath": "api/events/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EventTicketingSystem.DTOs.GetEventDto, EventTicketingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.ScheduleController",
    "Method": "CreateSchedule",
    "RelativePath": "api/schedules",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "scheduleDto",
        "Type": "EventTicketingSystem.DTOs.ScheduleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventTicketingSystem.Models.Schedule",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.ScheduleController",
    "Method": "GetSchedule",
    "RelativePath": "api/schedules/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EventTicketingSystem.Models.Schedule",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.ScheduleController",
    "Method": "UpdateSchedule",
    "RelativePath": "api/schedules/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "scheduleDto",
        "Type": "EventTicketingSystem.DTOs.ScheduleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.ScheduleController",
    "Method": "DeleteSchedule",
    "RelativePath": "api/schedules/schedule/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.SeatingController",
    "Method": "GetSeatingForEventAndSchedule",
    "RelativePath": "api/seating/event/{eventId}/schedule/{scheduleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "scheduleId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EventTicketingSystem.Models.Seating, EventTicketingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.SupportTicketController",
    "Method": "CreateSupportTicket",
    "RelativePath": "api/SupportTicket",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ticket",
        "Type": "EventTicketingSystem.Models.SupportTicket",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.SupportTicketController",
    "Method": "GetAllIssues",
    "RelativePath": "api/SupportTicket",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.SupportTicketController",
    "Method": "ResolveIssue",
    "RelativePath": "api/SupportTicket/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.TicketBookingController",
    "Method": "BookTicket",
    "RelativePath": "api/TicketBooking/book-ticket",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EventTicketingSystem.Models.TicketBookingRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.TicketTypeController",
    "Method": "DeleteTicketType",
    "RelativePath": "api/tickettypes/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.TicketTypeController",
    "Method": "GetTicketTypesForEvent",
    "RelativePath": "api/tickettypes/event/{eventId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EventTicketingSystem.Models.TicketType, EventTicketingSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EventTicketingSystem.Controllers.UserController",
    "Method": "GetUserDetails",
    "RelativePath": "api/User/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]